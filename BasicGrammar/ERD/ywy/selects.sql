/*
* 로그인 쿼리
*/   
SELECT  USER.ID
     ,  USER.NAME
     ,  CASE
            WHEN  STUDENT.STUDENT_CODE IS NOT NULL THEN 'S'
            WHEN  PROFESSOR.PROFESSOR_CODE IS NOT NULL THEN 'P'
            ELSE  NULL
        END  GRADE
     ,  CASE
            WHEN  STUDENT.STUDENT_CODE IS NOT NULL THEN STUDENT.STUDENT_CODE
            WHEN  PROFESSOR.PROFESSOR_CODE IS NOT NULL THEN PROFESSOR.PROFESSOR_CODE
            ELSE  NULL
        END  CODE
  FROM  (
		 SELECT  USER.ID
		      ,  USER.NAME
		   FROM  LOGIN_INFO AS LOGIN
		  INNER
		   JOIN  USER_INFO AS USER
		     ON  LOGIN.ID = USER.ID
		  WHERE  LOGIN.ID = 'shji'
		    AND  LOGIN.PASSWORD = '0000'
		) AS USER
  LEFT  OUTER
  JOIN	STUDENT AS STUDENT
    ON  STUDENT.ID = USER.ID
  LEFT  OUTER
  JOIN  PROFESSOR AS PROFESSOR
    ON  PROFESSOR.ID = USER.ID;
 
/*
 * 사용자 정보 조회 쿼리 
 */
-- 학생
SELECT  USER.ID
     ,  USER.NAME
     ,  USER.BIRTH_DATE
     ,  USER.PHONE_NUMBER
     ,  CASE
     		WHEN  USER.GENDER = 'M' THEN '남성'
     		WHEN  USER.GENDER = 'G' THEN '여성'
     		WHEN  USER.GENDER = 'X' THEN '제3의성'
     		WHEN  USER.GENDER = 'Z' THEN '미상'
     		ELSE  NULL
        END AS GENDER
     ,  CONCAT(USER.EMAIL, '@', USER.EMAIL_ADDRESS)
     ,  STUDENT.STUDENT_CODE
     ,  CASE
     		WHEN  STUDENT.GRADE = 'Y' THEN '재학'
     		WHEN  STUDENT.GRADE = 'N' THEN '휴학'
     		WHEN  STUDENT.GRADE = 'X' THEN '퇴학'
     		WHEN  STUDENT.GRADE = 'O' THEN '졸업'
     	END AS GRADE
  FROM  USER_INFO AS USER
 INNER
  JOIN  STUDENT AS STUDENT
    ON  USER.ID = STUDENT.ID
    
-- 교수
SELECT	USER.ID
     ,  USER.NAME
     ,  USER.BIRTH_DATE
     ,  USER.PHONE_NUMBER
     ,  CASE
     		WHEN  USER.GENDER = 'M' THEN '남성'
     		WHEN  USER.GENDER = 'G' THEN '여성'
     		WHEN  USER.GENDER = 'X' THEN '제3의성'
     		WHEN  USER.GENDER = 'Z' THEN '미상'
     		ELSE  NULL
        END AS GENDER
     ,  CONCAT(USER.EMAIL, '@', USER.EMAIL_ADDRESS)
     ,  PROFESSOR.PROFESSOR_CODE
     ,  PROFESSOR.ENT_DATE
     ,  PROFESSOR.SALARY
  FROM  USER_INFO AS USER
 INNER
  JOIN  PROFESSOR AS PROFESSOR
    ON  USER.ID = PROFESSOR.ID
 WHERE  USER.ID = 'shji'
   AND  PROFESSOR.PROFESSOR_CODE = 'P000000001'
   AND  PROFESSOR.USE_YN = 'Y';
		 
/*
 * 학과와 수강 과목 조회
 */
   
SELECT  MAJOR.MAJOR_NAME
     ,  MINOR.MINOR_NAME
     ,  (
     	 SELECT  USER.NAME
     	   FROM  PROFESSOR AS PROFESSOR
     	  INNER
     	   JOIN  USER_INFO AS USER
     	     ON  PROFESSOR.ID = USER.ID
     	  WHERE  PROFESSOR.PROFESSOR_CODE = MINOR.PROFESSOR_USER_CODE
     	) AS PROFESSOR_NAME
  FROM  MAJOR AS MAJOR
 INNER
  JOIN  MINOR AS MINOR
    ON  MAJOR.MAJOR_CODE = MINOR.MAJOR_CODE
 